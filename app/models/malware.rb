class Malware < ActiveRecord::Base
  belongs_to :classification
  belongs_to :filetype

  validates :md5,
    presence: true,
    uniqueness: true,
    format: { with: /\A0x[\dA-Fa-f]{32}\z/, message: 'must be in MD5 hex format'}
  validates :size,
    numericality: { only_integers: true, greater_than_or_equal_to: 0 }

  # a count of all malware by classification type
  scope :threat_count, -> { joins(:classification).group(:threat_type).count }

  # imports malware entries from a csv file
  def self.import(file_path)
    CSV.foreach(file_path, headers: true) do |row|
      filetype = Filetype.find_or_create_by(
        extension: row['FileType']
      )
      classification = Classification.find_or_create_by(
        behavior: row['ClassificationName'],
        threat_type: row['ClassificationType']
      )
      self.create(
        md5: row['MD5'],
        size: row['Size'],
        filetype: filetype,
        classification: classification
      )
    end
  end

  # massage threat type data for display
  # todo - should be refactored into a decorator class
  def self.threat_table
    threat_count.each_pair.map do |name, count|
      { classification_type: name, count: count }
    end
  end
end
